스크럼(Scrum)
	제품개발을 위하여 소규모 다기능팀이 스프린트라는 업무주기를 반복한다.
	스크럼 팀은 제품 책임자가 관리하는 제품 백로그에서 스프린트 백로그를 결정하고 완수하여
		매스프린트마다 증분을 산출한다.
	스크럼 마스터는 팀이 성과를 내도록 조력하며, 과제완수에 필요한 자원지원
		또는 장애요소 제거하며 프로세스를 인도한다

스크럼팀(scrum Team)
	프로젝트 수행에 필요한 모든 역량을 갖춘팀
		모든 부서로부터 팀원이 구성된다.
		팀원은 자신의 전문영역에 고정되지 않고 함께 팀 과제를 수행한다.
	자율관리 조직, 3자의 명령을 받지않고 스스로 업무 분량, 목표, 달성방안결정
		자신이 약속한 목표를 달성할 책임이 있다.
	스프린트 후 필요인력 보충과 방출이 가능하다

제품 책임자(Product owner)
	제품 백로그를 관리, 통제권한을 갖는다(오직 1명)
	고객/조직 가치기반 제품 백로그 항목의 우선순위 결정
	매 스프린트 결과검토로 우선순위의 지속적 조정, 관리

제품 백로그 (Product Backlog)
	사용자를 조사하여 구현해야 할 사항을 정의한 문서이다.
	다양한 요구명세가 있고 우선순위로 나뉘어져있다.
	이것은 제품 책임자(Product Owner)가 작성하는데 수정, 삭제가 가능하다.
	제품 책임자는 하나의 스프린트가 끝나면 제품 백로그를 업데이트해서 스프린트 회의때 제시하여야 한다.

	여러 팀이 한 제품을 만들 때에는, 그 제품에 필요한 모든 업무를 정의하는 하나의 제품 백로그(product backlog)를 사용한다. 
	각 팀 별로 제품 백로그를 따로 갖지 않는다. 또한, 제품 백로그 항목(product backlog items)을 각 팀에 사전에 나눠 갖지 않는다. 
	레스(LeSS)에서의 제품 백로그도 한 팀에서 스크럼을 하는 환경에서와 똑같다.

레스(LeSS)
	여러 팀이 하나의 제품을 함께 만들 때 적용하는 스크럼

제품 백로그 개선 회의 (PBR)
	각 스프린트마다 제품 백로그 항목을 개선하는 제품 백로그 개선 회의(PBR, Product Backlog Refinement)를 지속적으로 해야 한다. 
	PBR에서 하는 핵심 활동은 (1) 큰 항목을 분할하고, (2) 더 이상 “무엇”에 대한 질문이 나오지 않을 때까지 
		구현이 임박한 항목을 명확화하고, (3) 규모, “가치”, 위험 등을 추정하는 것
	분할(split), 명확화(clarify), 추정(estimate)을 한다
	대개 스프린트 기간의 10%를 미만을 PBR에 사용한다
	PBR은 보통 “스프린트 중반”에 이루어진다

스프린트 계획= 스크럼 계획
	잘개쪼갠 단위개발 일정, 프로젝트 관리주기(1~4주)
	스프린트 백로그(Sprint Backlog)에서 정한 대상의
	  개발에 집중함으로써 동작하는 제품 기능의 일부(Increment)를 만들어냄
	진행하는 동안 일정, 과제 가감등의 변경 불가

스프린트 백로그
	 제품 백로그로부터 추출되어 해당 스프린트에 할당된 기능 목록을 말함
	 스프린트 계획을 수립할 때 제품 책임자가 결정한 순위와 개발팀이 결정한 공수 정보를
		통합하여 논의한 후에 만들어짐
	 이 목록은 한 번의 스프린트에서만 사용됨

유저 스토리(User Story)의 핵심 구성 요소
	• 역할(Role) : 누가 원하는가?
	• 목표(Goal) : 무엇을 원하는가?
	• 이유(Reason) : 왜 원하는가?

유저스토리 지침
	사용자와 고객에게 가치가 있어야한다.
	제품 백로그는 고객(사용자)가 이해하는 언어로 작성
	역할(Role), 목표(Goal), 이유(Reason)를 기술
	작으면서 공수 추정과 테스트가 가능해야 한다.

좋은 유저스토리 조건
	독립적(Independent)
	협상 가능(Negotiable)
	가치 있는(Valuable)
	공수추정 가능(Estimable)
	작다(Small)
	테스트가능(Testable)

제품책임자
	전반적 제품 리더쉽을 발휘하여 의사결정
	제품전략, 제품로드맵, 제품백로그, 이해관계자 정리
	제품 백로그로 해당스프린트의 할당할 스프린트 백로그 도출
		팀은 스프린트 내에서 이를 구현할 것을 결정
	제품책임자는 우선순위에 따라 다음 스프린트에 작업 백로그선정
	프로젝트 초기에 기능정의를 주도함

기능책임자
	개발팀원
	각 기능을 정의, 개발 하고 스스로 검증, 관리함 

ADP(Adaptive Sofrware Development)방법론의 피처카드(Feature Card)
	1)계획상의 반복 시기(Planned Iteration)
	2)피처 ID
	3)피처 종류(Feature Type)
	4)피처 이름(Feature Name)
	5)피처 설명(Feature Description)
	6)예상 작업량(Estimated Work Effort)
	7)요구사항의 불확실성(Requirements Uncertainty)
	8)다른 기능과의 관계성(Dependencies with other Features)
	9)인수 테스트 방법(Acceptance Test)

플래닝 포커
	추정을 위한 합의 기반 기술(consensus-based technique)
	대부분 소프트웨어 개발에 있어서 개발 목표를 위한 공수 산정이나 상대적 규모산정에 사용
	만약 숫자를 말한다면, 그것은 곧 제안처럼 들리고, 
		그로인해 다른 참석자들의 공수산정에 영향을 미치기 때문에 사용한다.
	플래닝 포커 과정에서 각 백로그에 적힌 숫자를 스토리 포인트(Story Point)라 한다


스토리 포인트
	개념
		추정하는 값은 지속적인 반복을 통해 결국 정밀한 값으로 근접한다.
	이점
		팀의 현재 움직임과 향후 일정을 쉽고 빠르게 파악하고 예측하며 계획할 수 있다. 
		외부 환경 요소에 덜 의존하기 때문에 보다 객관적인 값을 지속적으로 이용할 수 있습니다. 
		스프린트 기간에 발생할 수 있는 너무 많은 회의나 갑자기 발생한 장애, 병가 등의 
			모든 예외 상황을 전부 수용할 수 있다는 것입니다.
	활용
		ROI(return on investment) 사분면 분석이나 카노(Kano) 모델을 응용한 
			우선순위 선정 작업을 통해 전략적으로 계획을 수립할 수 있다.

데일리 스크럼
	https://gmlwjd9405.github.io/2018/06/01/agile-dailyscrum.html
	스프린트 - 스프린트 계획 - 일일 스크럼 - 백로그 상세화 - 스프린트 리뷰 - 회고